{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","max","NewExpense","enteredExpenseData","id","Math","random","toString","onAddExpense","Card","classes","children","ExpensesFilter","selected","onChangeFilter","ExpenseDate","year","getFullYear","month","toLocaleString","day","ExpenseItem","ExpensesList","items","length","map","expense","ChartBar","barFillHeight","total","round","style","height","label","Chart","totalYearExpense","dataPoints","dataPoint","reduce","acc","curr","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","el","selectedYear","App","expenseList","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f1a1a668.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  // const [userInput, setUserInput] = useState({\r\n  //   enteredTitle: '',\r\n  //   enteredAmount: '',\r\n  //   enteredDate: ''\r\n  // })\r\n\r\n  // const titleChangeHandler = (event) => {\r\n  // \t// Whenever a state is being updated in dependence to other states, use alternate/ function form  of useState() because useState() schedules state update and not immediately\r\n  // \tsetUserInput((prevState) => {\r\n  // \t\treturn { ...prevState, enteredTitle: event.target.value };\r\n  // \t});\r\n  // }\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"submit\">Add expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import \"./NewExpense.css\";\r\n\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nconst NewExpense = (props) => {\r\n  const onSaveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString()\r\n    };\r\n    props.onAddExpense(expenseData);\r\n  }\r\n\r\n\treturn (\r\n\t\t<div className=\"new-expense\">\r\n\t\t\t<ExpenseForm onSaveExpenseData={onSaveExpenseDataHandler} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default NewExpense;\r\n","import \"./Card.css\"\r\n\r\nconst Card = (props) => {\r\n  const classes = 'card ' + props.className;\r\n  return <div className={classes}>{props.children}</div>\r\n}\r\n\r\nexport default Card;\r\n","import \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n\tconst dropdownChangeHandler = (event) => {\r\n\t\tprops.onChangeFilter(event.target.value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"expenses-filter\">\r\n\t\t\t<div className=\"expenses-filter__control\">\r\n\t\t\t\t<label>Filter by year</label>\r\n\t\t\t\t<select value={props.selected} onChange={dropdownChangeHandler}>\r\n\t\t\t\t\t<option value=\"2022\">2022</option>\r\n\t\t\t\t\t<option value=\"2021\">2021</option>\r\n\t\t\t\t\t<option value=\"2020\">2020</option>\r\n\t\t\t\t\t<option value=\"2019\">2019</option>\r\n\t\t\t\t</select>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import \"./ExpenseDate.css\";\r\n\r\nconst ExpenseDate = (props) => {\r\n  const year = props.date.getFullYear();\r\n\tconst month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n\tconst day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n\r\n  return (\r\n\t\t<div className=\"expense-date\">\r\n\t\t\t<div className=\"expense-date__month\">{month}</div>\r\n\t\t\t<div className=\"expense-date__year\">{year}</div>\r\n\t\t\t<div className=\"expense-date__day\">{day}</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ExpenseDate;","import React from \"react\";\r\n\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./ExpenseItem.css\";\r\n\r\nconst ExpenseItem = (props) => {\r\n\r\n\treturn (\r\n\t\t<li>\r\n\t\t\t<Card className=\"expense-item\">\r\n\t\t\t\t<ExpenseDate date={props.date} />\r\n\t\t\t\t<div className=\"expense-item__description\">\r\n\t\t\t\t\t<h2>{props.title}</h2>\r\n\t\t\t\t\t<div className=\"expense-item__price\">${props.amount}</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Card>\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nexport default ExpenseItem\r\n","import ExpenseItem from \"./ExpenseItem\";\r\nimport \"./ExpensesList.css\";\r\n\r\nconst ExpensesList = (props) => {\r\n\tif (props.items.length === 0) {\r\n\t\treturn <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ul className=\"expenses-list\">\r\n\t\t\t{props.items.map((expense) => (\r\n\t\t\t\t<ExpenseItem\r\n\t\t\t\t\tkey={expense.id} //Always use key tag when working with list items\r\n\t\t\t\t\ttitle={expense.title}\r\n\t\t\t\t\tamount={expense.amount}\r\n\t\t\t\t\tdate={expense.date}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\nexport default ExpensesList;\r\n","import \"./ChatBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n\tlet barFillHeight = \"0%\";\r\n\r\n\tif (props.total > 0) {\r\n\t\tbarFillHeight = Math.round((props.value / props.total) * 100) + \"%\";\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"chat-bar\">\r\n\t\t\t<div className=\"chart-bar__inner\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"chart-bar__fill\"\r\n\t\t\t\t\tstyle={{ height: barFillHeight }}\r\n\t\t\t\t></div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"chart-bar__label\">{props.label}</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ChartBar;\r\n","import \"./Chart.css\";\r\n\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value)\r\n  const totalYearExpense = dataPointValues.reduce((acc, curr) => acc + curr)\r\n\r\n\treturn (\r\n\t\t<div className=\"chart\">\r\n\t\t\t{props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n\t\t\t\t\tvalue={dataPoint.value}\r\n          total={totalYearExpense}\r\n\t\t\t\t\tlabel={dataPoint.label}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Chart;\r\n","import Chart from \"../Chart/Chart\"\r\n\r\nconst ExpensesChart = props => {\r\n  const chartDataPoints = [\r\n    { label: 'Jan', value: 0 },\r\n    { label: 'Feb', value: 0 },\r\n    { label: 'Mar', value: 0 },\r\n    { label: 'Apr', value: 0 },\r\n    { label: 'May', value: 0 },\r\n    { label: 'Jun', value: 0 },\r\n    { label: 'Jul', value: 0 },\r\n    { label: 'Aug', value: 0 },\r\n    { label: 'Sep', value: 0 },\r\n    { label: 'Oct', value: 0 },\r\n    { label: 'Nov', value: 0 },\r\n    { label: 'Dec', value: 0 },\r\n  ];\r\n\r\n  // Update the monthly expenses\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n}\r\n\r\nexport default ExpensesChart","import React, { useState } from \"react\";\r\n\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nimport \"./Expenses.css\";\r\n\r\nfunction Expenses(props) {\r\n\tconst [filteredYear, setFilteredYear] = useState(\"2020\");\r\n\r\n\tconst filterChangeHandler = (selectedYear) => {\r\n\t\tsetFilteredYear(selectedYear);\r\n\t};\r\n\r\n\tconst filteredExpenses = props.items.filter(\r\n\t\t(el) => filteredYear === el.date.getFullYear().toString()\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Card className=\"expenses\">\r\n\t\t\t<ExpensesFilter\r\n\t\t\t\tselected={filteredYear}\r\n\t\t\t\tonChangeFilter={filterChangeHandler}\r\n\t\t\t/>\r\n\t\t\t<ExpensesChart expenses={ filteredExpenses}/>\r\n\t\t\t{/* Rendering the expenses as a dynamic list */}\r\n\t\t\t<ExpensesList items={filteredExpenses} />\r\n\t\t</Card>\r\n\t);\r\n}\r\n\r\nexport default Expenses;\r\n","import React, {useState} from \"react\";\n\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport Expenses from \"./components/Expenses/Expenses\";\n\n\nconst App = () => {\n\tconst expenses = [\n\t\t{\n\t\t\tid: \"e1\",\n\t\t\ttitle: \"Toilet Paper\",\n\t\t\tamount: 94.12,\n\t\t\tdate: new Date(2022, 7, 10),\n\t\t},\n\t\t{\n\t\t\tid: \"e2\",\n\t\t\ttitle: \"New TV\",\n\t\t\tamount: 799.49,\n\t\t\tdate: new Date(2021, 2, 8),\n\t\t},\n\t\t{\n\t\t\tid: \"e3\",\n\t\t\ttitle: \"Car Insurance\",\n\t\t\tamount: 295.85,\n\t\t\tdate: new Date(2021, 8, 16),\n\t\t},\n\t\t{\n\t\t\tid: \"e4\",\n\t\t\ttitle: \"Groceries\",\n\t\t\tamount: 102.75,\n\t\t\tdate: new Date(2021, 9, 11),\n\t\t},\n\t];\n\n\tconst [expenseList, setExpenses] = useState(expenses);\n\n\tconst addExpenseHandler = expense => {\n\t\tsetExpenses(prevExpenses => {\n\t\t\treturn [expense, ...prevExpenses]\n\t\t});\n\t}\n\n\treturn (\n\t\t<div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenseList} />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}